# Nome do pipeline
name: $(Build.DefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

# Disparadores automáticos
trigger:
- main  # ou o nome da sua branch principal

# Pool de agentes (Usar o pool de agentes hospedado no Azure)
pool:
  vmImage: 'windows-latest'

# Variáveis
variables:
  buildConfiguration: 'Release'

# Passos do pipeline
steps:

- task: SonarCloudPrepare@2
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'andresombra'
    scannerMode: 'MSBuild'
    projectKey: '67aa08e18c4df9652a36eb9908de9d09607cda24'
    projectName: 'AngularAppTeste'



# Baixar o código do repositório
- task: DotNetCoreCLI@2
  displayName: 'Build Project'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

# Restaurar pacotes NuGet
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

# Build da solução
- task: VSBuild@1
  inputs:
    solution: '**/*.sln'
    msbuildArgs: '/p:Configuration=$(buildConfiguration)'
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# Analisar o código com SonarCloud
- task: SonarCloudAnalyze@1

# Publicar resultados da análise para o SonarCloud
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

# Publicar artefatos
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
